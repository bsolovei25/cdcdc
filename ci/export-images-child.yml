include:
  - ci/other.yml

variables:
  GIT_DEPTH: 3
  #DOCKER_HOST: tcp://docker:2375
  ## This will instruct Docker not to start over TLS.
  #DOCKER_TLS_CERTDIR: ""
  DOCKER_BUILDKIT: 1
  ENV_STAGES_FILE: "evj-front.env"
  COMPOSE_DOCKER_CLI_BUILD: 1 
  DOCKER_DRIVER: overlay2
  GIT_SSL_NO_VERIFY: "1"
  S3_RELEASE_BUCKET: "gazgolder/release-tags/${CI_PROJECT_NAME}"

stages:
  - exporting
  - updating
  - alerting

export-zyfra-ftp:
  extends: .export-image-to-ftp
  stage: exporting
  variables:
    SERVICE_NAME: "front"
    EXTERNAL_DOCKER_IMG: "onpz.local/evj/frontend"
    TAG: "$CI_RELEASE_TAG"
  needs: []
  when: manual
  only:
    refs:
      - devops
      - develop
      - master

update-tags-front:
  extends: .update-tags
  stage: updating
  needs:
    - job: export-zyfra-ftp
  only:
    - devops
    - master
    - develop

success-pipelines:
  extends: .alerting-template
  image:
    name: registry.funcoff.club/devops/rockethooks:1.1.1
  needs:
    - job: export-zyfra-ftp
  variables:
    MESSAGE: "*New release coming*. Uploaded to gpn-ftp ->"
  before_script:
    - mc cp ${S3_RELEASE_BUCKET}/${ENV_STAGES_FILE} .
    - export $(cat ${ENV_STAGES_FILE} | head -1)
  only:
    - develop
    - devops
    - master

failed-pipelines:
  extends: .alerting-template
  image:
    name: registry.funcoff.club/devops/rockethooks:1.1.1
  variables:
    MESSAGE: "*PIPELINE FAILED*. See details below ->"
  needs: 
    - job: update-tags-front
  when: on_failure
  only:
    - develop
    - devops
    - master
