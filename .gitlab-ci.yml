---
before_script:
- echo $CI_JOB_STAGE
- date
- ls
- pwd

after_script:
- date

variables:
    GIT_SSL_NO_VERIFY: "1"
    DEPLOY_DOMAIN: deploy.funcoff.club

stages:
    - prebuild
    - test
    - build
    - deploy-review
    - staging
    - deploy
    - clean-on-failure


.init_template: &init
    tags:
        - mbo-front


docker build:
    <<: *init
    stage: prebuild
    script:
        - echo "Prebuild checking... Getting docker container rdy."
        - docker container stop ${CI_PROJECT_NAME}-mbo || sleep 0.1
        - docker build -t ${CI_PROJECT_NAME}-mbo .
    only:
        - master
        - develop
          #- dev-pipelines
        - merge_requests

testing website:
    <<: *init
    stage: test
    script:
        - echo "Doing some tests... Someone should add unit tests or whatever here"
        - docker run --rm --name ${CI_PROJECT_NAME}-mbo -p ${BUILD_PORT}:4200 -d ${CI_PROJECT_NAME}-mbo
        - ./init-docker.sh
    only:
        - merge_requests
          #- dev-pipelines
 
build artifact:
    <<: *init
    stage: build
    script:
        - docker exec ${CI_PROJECT_NAME}-mbo ng build --prod || docker run --rm --name ${CI_PROJECT_NAME}-mbo -p 8000:4200 -d ${CI_PROJECT_NAME}-mbo ; docker exec ${CI_PROJECT_NAME}-mbo ng build #--prod
        - docker cp ${CI_PROJECT_NAME}-mbo:/app/dist/evj ./public
        - docker container stop ${CI_PROJECT_NAME}-mbo
    only:
        - master
        - develop
          #- dev-pipes
          #- merge_requests
    artifacts:
        paths:
            - ./public

deploy review:
    <<: *init
    stage: deploy-review
    only:
        - merge_requests
    environment:
        name: review/${CI_COMMIT_REF_NAME}
        url: http://build.funcoff.club:${BUILD_PORT}
        on_stop: stop-review
    script:
        - sed -i -E "s/(<title>Evj)(<\/title>)/\1  |  ${CI_COMMIT_SHORT_SHA}\2/g" ./src/index.html

stop-review:
    <<: *init
    variables:
        GIT_STRATEGY: none
    stage: deploy-review
    only:
        - merge_requests
    script:
        - docker container stop ${CI_PROJECT_NAME}-mbo
    when: manual
    environment:
        name: review/${CI_COMMIT_REF_NAME}
        action: stop

staging:
    <<: *init
    stage: staging
    environment:
        name: staging
        url: http://${DEPLOY_DOMAIN}:90
    variables:
        CMD_REPLACE: sed -i -E "s/(<title>Evj)(<\/title>)/\1 | ${CI_COMMIT_SHORT_SHA} \2/g" /var/www/mbo-staging.local/public/index.html
    script:
        - ssh root@${DEPLOY_DOMAIN} rm -rf /var/www/mbo-staging.local/public
        - scp -r ./public root@${DEPLOY_DOMAIN}:/var/www/mbo-staging.local
        - ssh root@${DEPLOY_DOMAIN} $CMD_REPLACE
        - ssh root@${DEPLOY_DOMAIN} "sed -i  's/:5555/:6555/g' /var/www/mbo-staging.local/public/assets/config.json || sleep 0.1"
        - ssh root@${DEPLOY_DOMAIN} nginx -s reload
    only:
        - develop

.prod:
    <<: *init
    stage: deploy
    environment:
        name: prod
        url: http://${DEPLOY_DOMAIN}:80
    variables:
        CMD_REPLACE: sed -i -E "s/(<title>Evj)(<\/title>)/\1 | ${CI_COMMIT_SHORT_SHA} \2/g" /var/www/angular.local/public/index.html
    script:
        - ssh root@${DEPLOY_DOMAIN} rm -rf /var/www/angular.local/public
        - scp -r ./public root@${DEPLOY_DOMAIN}:/var/www/angular.local
        - ssh root@${DEPLOY_DOMAIN} $CMD_REPLACE
        - ssh root@${DEPLOY_DOMAIN} "sed -i  's/:6555/:5555/g' /var/www/angular.local/public/assets/config.json || sleep 0.1"
        - ssh root@${DEPLOY_DOMAIN} nginx -s reload
    only:
        - master

clean on failure:
    <<: *init
    stage: clean-on-failure
    script:
        - docker container stop ${CI_PROJECT_NAME}-mbo
    when: on_failure
