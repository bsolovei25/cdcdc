---
include:
  # - ci/pipelines/release.yml
  - project: 'oaovd/osspu/evj/infra/pipelines'
    file: '/pipelines/angular-docker-helm-main.yml'

variables:
  # legacy
  ENV_STAGES_FILE: "evj-front.env"
  S3_RELEASE_BUCKET: "gazgolder/release-tags/${CI_PROJECT_NAME}"

  # global lvl
  GIT_DEPTH: 3
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_DRIVER: overlay2
  GIT_SSL_NO_VERIFY: "1"
  PROJECT_NAME: "front"

  # semantic lvl
  RELEASE_BRANCH: "devops"

  # build lvl
  DOCKERHUB_URL: "registry.funcoff.club"
  DOCKERFILE_PACK: "./docker/Dockerfile.packing"
  DOCKER_REPO: "evj"
  DOCKER_EXPORT_PULL_TAG: "latest"
  CACHE_KEY: "$CI_PROJECT_NAME-$CI_PROJECT_ID-cache"

  # service lvl
  SERVICE_NAME: "front"
  EXTERNAL_DOCKER_IMG: "onpz.local/evj/front"
  TAG: "$CI_RELEASE_TAG"

  # deploy lvl
  RELEASE: "front"
  IMG_VERSION: "latest"
  NS: "evj"
  CHART: "./ci/front-chart"
  DOMAIN: "funcoff.club"
  INGRESS_PREFIX: "evj"

stages:
  - build
  - packing
  - deploy
  - alerting
  - release

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "devops"

.default_rules_refs_anchor: &default_rules_refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "devops"


deliver-to-deploy:
  extends: .alpine-ssh-base
  stage: deploy
  variables:
    DEPLOY_DOMAIN: 192.168.0.23
    GIT_STRATEGY: none
    DEPLOY_PATH: "/var/www/angular-staging.local/public"
    CMD_REPLACE: sed -i -E "s/(<title>Evj)(<\/title>)/\1 | ${CI_COMMIT_SHORT_SHA} \2/g" /var/www/angular.local/public/index.html
  needs:
    - job: ng-build
      artifacts: true
  before_script:
    - cat /etc/hosts
  script:
    - ssh root@${DEPLOY_DOMAIN} rm -rf $DEPLOY_PATH
    - mv ./dist/evj public
    - scp -r ./public root@${DEPLOY_DOMAIN}:${DEPLOY_PATH//\/public}
    - ssh root@${DEPLOY_DOMAIN} $CMD_REPLACE
    - ssh root@${DEPLOY_DOMAIN} nginx -s reload
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "devops"

export-to-zyfra:
  stage: release
  variables:
    GIT_STRATEGY: none
  trigger:
    include: ci/pipelines/export-images-child.yml
  <<: *default_rules_refs

export-to-zyfra-semantic:
  stage: release
  needs: []
  trigger:
    include:
      - project: 'oaovd/osspu/evj/infra/pipelines'
        file: '/pipelines/semantic-release-to-zyfra-tst.yml'
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline" && $RELEASE == "ZYFRA_FRONT"
    # - if: $CI_COMMIT_BRANCH == "master"
    #   when: manual
    # - if: $CI_COMMIT_BRANCH == "devops"
    #   when: manual
    # - if: $CI_COMMIT_BRANCH == "alpha"
    #   when: manual

release-notes-maker:
  extends: .release-notes-tpl
  stage: release
  needs: []
  dependencies: []
  when: manual
